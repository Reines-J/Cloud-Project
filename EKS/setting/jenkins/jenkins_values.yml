controller:
  serviceType: NodePort
  serviceAnnotations: {}
  statefulSetLabels: {}
  serviceLabels: {}
  agentListenerServiceType: "ClusterIP"
  # NodePort, ClusterIP, LoadBalancer
  ingress:
      enabled: true
      paths:
      apiVersion: "extensions/v1beta1"
      labels: {}
      annotations:
        kubernetes.io/ingress.class: alb
      hostName: jenkins.reines-test.link
      tls:
       - secretName: tls-certmanager
         hosts:
          - jenkins.reines-test.link
  secondaryingress:
    enabled: false
    paths: []
    apiVersion: "extensions/v1beta1"
    labels: {}
    annotations: {}
    hostName:
    tls:
    
  runAsUser: 0
  runAsGroup: 0
backup:
  runAsUser: 0
  runAsGroup: 0

agent:
  namespace: ci
  privileged: true
  alwaysPullImage: true
  customJenkinsLabels: jenkins-jenkins-agent
  volumes:
   - type: HostPath
     hostPath: /var/run/docker.sock
     mountPath: /var/run/docker.sock
   - type: HostPath
     hostPath: /bin/docker
     mountPath: /bin/docker
  command:
  podName: "agent"
persistence:
  enabled: true
  existingClaim: {}
  storageClass: efs-sc
  annotations: {}
  accessMode: "ReadWriteMany"
  size: "10Gi"
  volumes: {}
  mounts: {}

additionalAgents: 
  maven:
    podName: maven
    customJenkinsLabels: maven
    # An example of overriding the jnlp container
    # sideContainerName: jnlp
    image: jenkins/jnlp-agent-maven
    tag: jdk11

serviceAccount:
  create: true
  # The name of the service account is autogenerated by default
  name: jenkins-sa
  annotations: 
    eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/role-name
  imagePullSecretName:


serviceAccountAgent:
  # Specifies whether a ServiceAccount should be created
  create: false
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: jenkins-agent-sa
  annotations: 
    eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/role-name
  imagePullSecretName:

# volumes 종류 
# - type: ConfigMap
#   configMapName: myconfigmap
#   mountPath: /var/myapp/myconfigmap
# - type: EmptyDir
#   mountPath: /var/myapp/myemptydir
#   memory: false
# - type: HostPath
#   hostPath: /var/lib/containers
#   mountPath: /var/myapp/myhostpath
# - type: Nfs
#   mountPath: /var/myapp/mynfs
#   readOnly: false
#   serverAddress: "192.0.2.0"
#   serverPath: /var/lib/containers
# - type: PVC
#   claimName: mypvc
#   mountPath: /var/myapp/mypvc
#   readOnly: false
# - type: Secret
#   defaultMode: "600"
#   mountPath: /var/myapp/mysecret
#   secretName: mysecret
# Pod-wide environment, these vars are visible to any container in the agent pod
